spring:
  docker:
    compose:
      skip:
        in-tests: false
  config:
    activate:
      on-profile: local
  application:
    name: monitoring-service
  datasource:
    url: jdbc:postgresql://localhost:5432/measurements
    username: postgres
    password: postgres
  flyway:
    schemas: monitoring
  kafka:
    admin:
      fail-fast: true
    bootstrap-servers: localhost:19092
    properties:
      schema.registry.url: http://localhost:8081
      value.subject.name.strategy: io.confluent.kafka.serializers.subject.TopicRecordNameStrategy
    producer:
      key-serializer: "org.apache.kafka.common.serialization.StringSerializer"
      value-serializer: "org.springframework.kafka.support.serializer.JsonSerializer"
      properties:
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
      acks: "all"
    consumer:
      key-deserializer: "org.apache.kafka.common.serialization.StringDeserializer"
      value-deserializer: "org.springframework.kafka.support.serializer.JsonDeserializer"
      group-id: "${spring.application.name}-group"
      properties:
        spring.json.trusted.packages: "br.com.torquato.measurement.schema"
      auto-offset-reset: earliest